##############################################################################
# The main properties file to configure your application
#
# Properties can be prefixed by "%".
# "%"" matches a mode you can set as system property. For instance when you
# are using maven you can do: mvn -Dmode=test jetty:run
#
# Using that the following property:
# %test.myproperty=test property
# would overwrite the property
# myproperty=my property
#
# You can define as many environments as you want. Simply set them in the mode.
##############################################################################
application.name=XCMailr

application.cookie.prefix=XCMailr

# ISO Language Code, optionally followed by a valid ISO Country Code. 
application.languages=en,de

application.session.expire_time_in_seconds=3600
application.session.send_only_if_changed=true
application.session.transferred_over_https_only=false
# the url of the server (used for links in emails), without the basedir and the trailing "/"
# e.g. if your app runs on http://localhost:8080/xc/mailr, add "http://localhost:8080" here
application.url=http://localhost:${application.port}
application.port=8080
# the host the server is listening on
# application.host=localhost

# the base-directory-path on the server, without leading and trailing "/" 
# e.g. if your app runs on http://localhost:8080/xc/mailr, add "xc/mailr" 
# if this app runs on http://localhost:8080, leave it empty
application.basedir=

# the number of default entries per page
application.default.entriesperpage=15

# Set an application secret and uncomment the next line, its used to verify session-cookies
# application.secret = 

# indicates the use of the whitelisting function
# the allowed domains can be configured at the admin-section
application.whitelist = true

# maximum time in minutes that a temporary mail could be valid
application.temporarymail.maximumvalidtime = 30

# the amount of days an API token should be valid 
application.api.tokenexpirationtime = 30

######################################
#   Configure the Inbound SMTP       #
######################################

# Port on which the SMTP-Server is listening
mbox.port=25000
# Name of the server (used in the mail for pw-forgot)
mbox.host=xcmailr.test

# Whether the inbound SMTP server supports upgrading the connection to TLS
# (via STARTTLS command).
mbox.enableTls = true

# Whether the inbound SMTP server requires the client to upgrade the connection
# to TLS (via STARTTLS command). Effective only when mbox.enableTls = true.
mbox.requireTls = false

# check interval for the expiration of mailboxes (in minutes!)
mbox.interval=1
# List of available Domains, separated by commas
mbox.dlist=xcmailr.test,ccmailr.test
mbox.adminaddr=admin@${mbox.host}

# the interval to check for new mails and send them, in minutes (default: 1 minute)
mbox.mailinterval=1

# the maximum size of an email that will be handled. Emails exceeding this limit will be dropped.
mbox.mail.maxsize=25000000

# the amount of minutes a saved email will we preserved before finally deleted
mbox.mail.retentionperiod = 10

# this will configure the minimum password-length
pw.length=4

# change the next value!
admin.pass=1234

# set the time for the validity of the confirmation-token in hours (default : 1hour) 
confirm.period=1

# set the number of entries that were shown at the mail-transaction-page
# choose 0 if all entries should be displayed
mailtransaction.displaylimit = 9000

# set the max-age of entries in the mailtransaction list in hours, older entries will be deleted
# choose 
# 0  if nothing should be logged and 
# -1 if no transactions should be deleted
mailtransaction.maxage = 168

########################################
#   Configure the Outbound SMTP        #
# (specifies where to send the mails)  #
########################################
mail.smtp.host=
mail.smtp.port=25
mail.smtp.user=
mail.smtp.pass=
# set this to true if a password and username is used to send mails
mail.smtp.auth=true
# indicates a tls-connection
mail.smtp.tls=true
# set this to true if STARTTLS command should be used to establish TLS connection
mail.smtp.starttls=false
# debugging messages
mail.smtp.debug=true

# indicates whether the forward-message should be wrapped in a new mail 
# containing the original-message header in the body
mail.msg.rewrite = false

################################
# Configure the Caching-Server #
################################
# the Host for the Memcached-Server (including the port)
memcached.host=localhost:11211

# use the EhCache-Standalone-Solution in test and dev-mode and MemCached (required separately) in production
# as said in the ninja-framework docs, you always should use MemCached in prod-mode
cache.implementation=ninja.cache.CacheMemcachedImpl
%test.cache.implementation=ninja.cache.CacheEhCacheImpl
%dev.cache.implementation=ninja.cache.CacheEhCacheImpl

###############################
# Configure the Ebean-Storage #
###############################
# we use an embedded ebeans in regular config
ebean.datasource.databaseUrl=jdbc:h2:~/xcmailrDB;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE
# in memory db when testing:
%test.ebean.datasource.databaseUrl=jdbc:h2:mem:tests;DB_CLOSE_DELAY=-1
%dev.ebean.datasource.databaseUrl=jdbc:h2:~/test;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE


# database username
ebean.datasource.username=sa
# database password
ebean.datasource.password=
# db-driver
ebean.datasource.databaseDriver=org.h2.Driver
ebean.logging=all

# add additional Models which were not located at package models.* here
ebean.models=

# generates and runs the ddl 
ebean.ddl.generate=false
ebean.ddl.run=false
%dev.ebean.ddl.generate=false
%dev.ebean.ddl.run=false
%test.ebean.ddl.generate=true
%test.ebean.ddl.run=true

ebean.datasource.minConnections=1
ebean.datasource.maxConnections=50
ebean.datasource.isolationlevel=read_committed
ebean.datasource.heartbeatsql=select 1

# configure whether stack traces should be captured by Ebean when obtaining a connection from pool
# useful when analyzing potential connection pool leaks (adds performance overhead!!!)
#ebean.datasource.captureStackTrace=false
#%test.ebean.datasource.captureStackTrace=false
#%dev.ebean.datasource.captureStackTrace=false

#####################################
# Ninja DB migration (using Flyway) #
#####################################
migration.engine.implementation=etc.MigrationEngineFlyway
# run migration scripts upon application start
ninja.migration.run=true
# don't run DB migration in test mode as Ebean builds one from scratch
%test.ninja.migration.run=false

# Uncomment the following line when you want to baseline an existing DB before applying any migrations
# ninja.migration.baselineOnMigrate=true

